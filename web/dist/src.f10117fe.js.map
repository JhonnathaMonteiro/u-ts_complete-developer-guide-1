{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,ADOA,ICPA,ADOA,IAAA,ECPA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA;ACLA,ADKA,ICLM,IAAI,GAAG,CDKb,GCLiB,MAAA,CAAA,IAAJ,CAAS;AAAC,ADQrB,ECRqB,IAAI,EAAE,GDQ3B,IAAA,CCRoB,ADQA,IAApB,EAAmC;ACRE,ADQjB,ECRiB,GAAG,EAAE,EDQtB,IAAA,GAAA,IAAA;ACRA,ADMpB,CCNW,CAAb,ODME,MAAA,GAAsC,EAAtC;ACJF,ADOG,ICPC,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;AAChB,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,ADOC,CCTF,CDSE,IAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAoB;ACNtB,ADOI,ICPA,CAAC,EAAL,CAAQ,GDOG,KCPX,ADOgB,ECPE,EDOP,CAAU,QAAV,CCPO,ADOd;ACNF,ADOC,ECPD,CDKA,MCLO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,ADOE,EAAA,ECPE,CAAC,CDOH,CCPF,ADOE,CCPM,MAAR,EAAgB,ADOd,CAAA,GAAA,GAAA,KCPc,KDOV,MAAJ,EAAqB;ACNrB,ADOQ,ECPR,EDOQ,KCPD,CAAC,ADOO,CAAC,ECPhB,CAAY,GDOJ,CAAe,KAAK,IAApB,EAA0B,KCPlC,CDOQ;ACLT,ADME,CCTH,EDOE;ACFF,IAAI,CAAC,OAAL,CAAa,MAAb;AACA,ADKE,EAAA,ECLE,CAAC,CDKH,CAAA,KCLF,CAAa,GDKX,CAAA,EAAA,CCLF,EDKE,UAAG,SAAH,EAAsB,QAAtB,EAAwC;AACtC,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,SAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACvB,QAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;;AAEA,QAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACpC;AACH;;AAED,IAAA,QAAQ,CAAC,OAAT,CAAkB,UAAA,QAAA,EAAQ;AACxB,MAAA,QAAQ;AACT,KAFD;AAGD,GAVD;;AAWF,SAAA,IAAA;AA/BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n  name?: string;\r\n  age?: number\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: {[key: string]: Callback[]} = {};\r\n  \r\n  constructor(private data: UserProps) {\r\n  }\r\n  \r\n  get(propName: string): (number | string) {\r\n    return this.data[propName];\r\n  }\r\n  \r\n  set(update: UserProps): void {\r\n    (<any>Object).assign(this.data, update);\r\n  }\r\n  \r\n  on(eventName: string, callback: Callback): void {\r\n    const handlers = this.events[eventName] || [];\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n  \r\n  trigger(eventName: string) : void {\r\n    const handlers = this.events[eventName];\r\n    \r\n    if (!handlers || handlers.length === 0) {\r\n        return;\r\n    }\r\n    \r\n    handlers.forEach( callback => {\r\n      callback();\r\n    })\r\n  }\r\n}\r\n","import {User} from './models/User';\r\n\r\nconst user = new User({name: 'myname', age: 20});\r\n\r\nuser.on('change', () => {\r\n  console.log('change #1');\r\n});\r\nuser.on('change', () => {\r\n  console.log('change #2');\r\n});\r\nuser.on('save', () => {\r\n  console.log('save was triggered');\r\n  \r\n});\r\n\r\nuser.trigger('save');\r\nuser.trigger('oehuh');\r\n"]}